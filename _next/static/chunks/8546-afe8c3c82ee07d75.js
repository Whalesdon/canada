"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[8546],{83893:function(e,t,r){r.r(t),r.d(t,{AbiCoder:function(){return o.R},ConstructorFragment:function(){return n.Xg},ErrorFragment:function(){return n.IC},EventFragment:function(){return n.QV},FormatTypes:function(){return n.pc},Fragment:function(){return n.HY},FunctionFragment:function(){return n.YW},Indexed:function(){return a.Hk},Interface:function(){return a.vU},LogDescription:function(){return a.CC},ParamType:function(){return n._R},TransactionDescription:function(){return a.vk},checkResultErrors:function(){return i.BR},defaultAbiCoder:function(){return o.$}});var n=r(11388),o=r(84243),a=r(8198),i=r(61184)},20770:function(e,t,r){Object.defineProperty(t,"__esModule",{value:!0}),t.hex=t.compareBytes=void 0;let n=r(58040);t.compareBytes=function(e,t){let r=Math.min(e.length,t.length);for(let n=0;n<r;n++)if(e[n]!==t[n])return e[n]-t[n];return e.length-t.length},t.hex=function(e){return"0x"+(0,n.bytesToHex)(e)}},35001:function(e,t,r){Object.defineProperty(t,"__esModule",{value:!0}),t.renderMerkleTree=t.isValidMerkleTree=t.processMultiProof=t.getMultiProof=t.processProof=t.getProof=t.makeMerkleTree=void 0;let n=r(82192),o=r(58040),a=r(20770),i=r(97240),u=(e,t)=>(0,n.keccak256)((0,o.concatBytes)(...[e,t].sort(a.compareBytes))),s=e=>2*e+1,l=e=>2*e+2,f=e=>e>0?Math.floor((e-1)/2):(0,i.throwError)("Root has no parent"),h=e=>e>0?e-(-1)**(e%2):(0,i.throwError)("Root has no siblings"),d=(e,t)=>t>=0&&t<e.length,c=(e,t)=>d(e,s(t)),m=(e,t)=>d(e,t)&&!c(e,t),g=e=>e instanceof Uint8Array&&32===e.length,v=(e,t)=>void(m(e,t)||(0,i.throwError)("Index is not a leaf")),p=e=>void(g(e)||(0,i.throwError)("Merkle tree nodes must be Uint8Array of length 32"));t.makeMerkleTree=function(e){if(e.forEach(p),0===e.length)throw Error("Expected non-zero number of leaves");let t=Array(2*e.length-1);for(let[r,n]of e.entries())t[t.length-1-r]=n;for(let r=t.length-1-e.length;r>=0;r--)t[r]=u(t[s(r)],t[l(r)]);return t},t.getProof=function(e,t){v(e,t);let r=[];for(;t>0;)r.push(e[h(t)]),t=f(t);return r},t.processProof=function(e,t){return p(e),t.forEach(p),t.reduce(u,e)},t.getMultiProof=function(e,t){if(t.forEach(t=>v(e,t)),t.sort((e,t)=>t-e),t.slice(1).some((e,r)=>e===t[r]))throw Error("Cannot prove duplicated index");let r=t.concat(),n=[],o=[];for(;r.length>0&&r[0]>0;){let t=r.shift(),a=h(t),i=f(t);a===r[0]?(o.push(!0),r.shift()):(o.push(!1),n.push(e[a])),r.push(i)}return 0===t.length&&n.push(e[0]),{leaves:t.map(t=>e[t]),proof:n,proofFlags:o}},t.processMultiProof=function(e){if(e.leaves.forEach(p),e.proof.forEach(p),e.proof.length<e.proofFlags.filter(e=>!e).length)throw Error("Invalid multiproof format");if(e.leaves.length+e.proof.length!==e.proofFlags.length+1)throw Error("Provided leaves and multiproof are not compatible");let t=e.leaves.concat(),r=e.proof.concat();for(let n of e.proofFlags){let e=t.shift(),o=n?t.shift():r.shift();if(void 0===e||void 0===o)throw Error("Broken invariant");t.push(u(e,o))}if(t.length+r.length!==1)throw Error("Broken invariant");return t.pop()??r.shift()},t.isValidMerkleTree=function(e){for(let[t,r]of e.entries()){if(!g(r))return!1;let n=s(t),a=l(t);if(a>=e.length){if(n<e.length)return!1}else if(!(0,o.equalsBytes)(r,u(e[n],e[a])))return!1}return e.length>0},t.renderMerkleTree=function(e){if(0===e.length)throw Error("Expected non-zero number of nodes");let t=[[0,[]]],r=[];for(;t.length>0;){let[n,a]=t.pop();r.push(a.slice(0,-1).map(e=>["   ","│  "][e]).join("")+a.slice(-1).map(e=>["└─ ","├─ "][e]).join("")+n+") "+(0,o.bytesToHex)(e[n])),l(n)<e.length&&(t.push([l(n),a.concat(0)]),t.push([s(n),a.concat(1)]))}return r.join("\n")}},96554:function(e,t,r){t.i=void 0;var n=r(9408);Object.defineProperty(t,"i",{enumerable:!0,get:function(){return n.StandardMerkleTree}})},9408:function(e,t,r){Object.defineProperty(t,"__esModule",{value:!0}),t.StandardMerkleTree=void 0;let n=r(82192),o=r(58040),a=r(83893),i=r(20770),u=r(35001),s=r(14541),l=r(97240);function f(e,t){return(0,n.keccak256)((0,n.keccak256)((0,o.hexToBytes)(a.defaultAbiCoder.encode(t,e))))}class h{constructor(e,t,r){this.tree=e,this.values=t,this.leafEncoding=r,this.hashLookup=Object.fromEntries(t.map(({value:e},t)=>[(0,i.hex)(f(e,r)),t]))}static of(e,t){let r=e.map((e,r)=>({value:e,valueIndex:r,hash:f(e,t)})).sort((e,t)=>(0,i.compareBytes)(e.hash,t.hash)),n=(0,u.makeMerkleTree)(r.map(e=>e.hash)),o=e.map(e=>({value:e,treeIndex:0}));for(let[e,{valueIndex:t}]of r.entries())o[t].treeIndex=n.length-e-1;return new h(n,o,t)}static load(e){if("standard-v1"!==e.format)throw Error(`Unknown format '${e.format}'`);return new h(e.tree.map(o.hexToBytes),e.values,e.leafEncoding)}static verify(e,t,r,n){let a=(0,u.processProof)(f(r,t),n.map(o.hexToBytes));return(0,o.equalsBytes)(a,(0,o.hexToBytes)(e))}static verifyMultiProof(e,t,r){let n=r.leaves.map(e=>f(e,t)),a=r.proof.map(o.hexToBytes),i=(0,u.processMultiProof)({leaves:n,proof:a,proofFlags:r.proofFlags});return(0,o.equalsBytes)(i,(0,o.hexToBytes)(e))}dump(){return{format:"standard-v1",tree:this.tree.map(i.hex),values:this.values,leafEncoding:this.leafEncoding}}render(){return(0,u.renderMerkleTree)(this.tree)}get root(){return(0,i.hex)(this.tree[0])}*entries(){for(let[e,{value:t}]of this.values.entries())yield[e,t]}validate(){for(let e=0;e<this.values.length;e++)this.validateValue(e);if(!(0,u.isValidMerkleTree)(this.tree))throw Error("Merkle tree is invalid")}leafHash(e){return(0,i.hex)(f(e,this.leafEncoding))}leafLookup(e){return this.hashLookup[this.leafHash(e)]??(0,l.throwError)("Leaf is not in tree")}getProof(e){let t="number"==typeof e?e:this.leafLookup(e);this.validateValue(t);let{treeIndex:r}=this.values[t],n=(0,u.getProof)(this.tree,r);if(!this._verify(this.tree[r],n))throw Error("Unable to prove value");return n.map(i.hex)}getMultiProof(e){let t=e.map(e=>"number"==typeof e?e:this.leafLookup(e));for(let e of t)this.validateValue(e);let r=t.map(e=>this.values[e].treeIndex),n=(0,u.getMultiProof)(this.tree,r);if(!this._verifyMultiProof(n))throw Error("Unable to prove values");return{leaves:n.leaves.map(e=>this.values[this.hashLookup[(0,i.hex)(e)]].value),proof:n.proof.map(i.hex),proofFlags:n.proofFlags}}verify(e,t){return this._verify(this.getLeafHash(e),t.map(o.hexToBytes))}_verify(e,t){let r=(0,u.processProof)(e,t);return(0,o.equalsBytes)(r,this.tree[0])}verifyMultiProof(e){return this._verifyMultiProof({leaves:e.leaves.map(e=>this.getLeafHash(e)),proof:e.proof.map(o.hexToBytes),proofFlags:e.proofFlags})}_verifyMultiProof(e){let t=(0,u.processMultiProof)(e);return(0,o.equalsBytes)(t,this.tree[0])}validateValue(e){(0,s.checkBounds)(this.values,e);let{value:t,treeIndex:r}=this.values[e];(0,s.checkBounds)(this.tree,r);let n=f(t,this.leafEncoding);if(!(0,o.equalsBytes)(n,this.tree[r]))throw Error("Merkle tree does not contain the expected value");return n}getLeafHash(e){return"number"==typeof e?this.validateValue(e):f(e,this.leafEncoding)}}t.StandardMerkleTree=h},14541:function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.checkBounds=void 0,t.checkBounds=function(e,t){if(t<0||t>=e.length)throw Error("Index out of bounds")}},97240:function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.throwError=void 0,t.throwError=function(e){throw Error(e)}},89620:function(e,t,r){r.d(t,{Z:function(){return b}});var n,o={};function a(e){return(a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function i(e,t){if(t.length<e)throw TypeError(e+" argument"+(e>1?"s":"")+" required, but only "+t.length+" present")}function u(e){i(1,arguments);var t=Object.prototype.toString.call(e);return e instanceof Date||"object"===a(e)&&"[object Date]"===t?new Date(e.getTime()):"number"==typeof e||"[object Number]"===t?new Date(e):(("string"==typeof e||"[object String]"===t)&&"undefined"!=typeof console&&(console.warn("Starting with v2.0.0-beta.1 date-fns doesn't accept strings as date arguments. Please use `parseISO` to parse strings. See: https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#string-arguments"),console.warn(Error().stack)),new Date(NaN))}function s(e,t){i(2,arguments);var r=u(e),n=u(t),o=r.getTime()-n.getTime();return o<0?-1:o>0?1:o}var l={ceil:Math.ceil,round:Math.round,floor:Math.floor,trunc:function(e){return e<0?Math.ceil(e):Math.floor(e)}},f={lessThanXSeconds:{one:"less than a second",other:"less than {{count}} seconds"},xSeconds:{one:"1 second",other:"{{count}} seconds"},halfAMinute:"half a minute",lessThanXMinutes:{one:"less than a minute",other:"less than {{count}} minutes"},xMinutes:{one:"1 minute",other:"{{count}} minutes"},aboutXHours:{one:"about 1 hour",other:"about {{count}} hours"},xHours:{one:"1 hour",other:"{{count}} hours"},xDays:{one:"1 day",other:"{{count}} days"},aboutXWeeks:{one:"about 1 week",other:"about {{count}} weeks"},xWeeks:{one:"1 week",other:"{{count}} weeks"},aboutXMonths:{one:"about 1 month",other:"about {{count}} months"},xMonths:{one:"1 month",other:"{{count}} months"},aboutXYears:{one:"about 1 year",other:"about {{count}} years"},xYears:{one:"1 year",other:"{{count}} years"},overXYears:{one:"over 1 year",other:"over {{count}} years"},almostXYears:{one:"almost 1 year",other:"almost {{count}} years"}};function h(e){return function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},r=t.width?String(t.width):e.defaultWidth;return e.formats[r]||e.formats[e.defaultWidth]}}var d={date:h({formats:{full:"EEEE, MMMM do, y",long:"MMMM do, y",medium:"MMM d, y",short:"MM/dd/yyyy"},defaultWidth:"full"}),time:h({formats:{full:"h:mm:ss a zzzz",long:"h:mm:ss a z",medium:"h:mm:ss a",short:"h:mm a"},defaultWidth:"full"}),dateTime:h({formats:{full:"{{date}} 'at' {{time}}",long:"{{date}} 'at' {{time}}",medium:"{{date}}, {{time}}",short:"{{date}}, {{time}}"},defaultWidth:"full"})},c={lastWeek:"'last' eeee 'at' p",yesterday:"'yesterday at' p",today:"'today at' p",tomorrow:"'tomorrow at' p",nextWeek:"eeee 'at' p",other:"P"};function m(e){return function(t,r){var n;if("formatting"===(null!=r&&r.context?String(r.context):"standalone")&&e.formattingValues){var o=e.defaultFormattingWidth||e.defaultWidth,a=null!=r&&r.width?String(r.width):o;n=e.formattingValues[a]||e.formattingValues[o]}else{var i=e.defaultWidth,u=null!=r&&r.width?String(r.width):e.defaultWidth;n=e.values[u]||e.values[i]}return n[e.argumentCallback?e.argumentCallback(t):t]}}function g(e){return function(t){var r,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},o=n.width,a=o&&e.matchPatterns[o]||e.matchPatterns[e.defaultMatchWidth],i=t.match(a);if(!i)return null;var u=i[0],s=o&&e.parsePatterns[o]||e.parsePatterns[e.defaultParseWidth],l=Array.isArray(s)?function(e,t){for(var r=0;r<e.length;r++)if(t(e[r]))return r}(s,function(e){return e.test(u)}):function(e,t){for(var r in e)if(e.hasOwnProperty(r)&&t(e[r]))return r}(s,function(e){return e.test(u)});return r=e.valueCallback?e.valueCallback(l):l,{value:r=n.valueCallback?n.valueCallback(r):r,rest:t.slice(u.length)}}}var v={code:"en-US",formatDistance:function(e,t,r){var n,o=f[e];return(n="string"==typeof o?o:1===t?o.one:o.other.replace("{{count}}",t.toString()),null!=r&&r.addSuffix)?r.comparison&&r.comparison>0?"in "+n:n+" ago":n},formatLong:d,formatRelative:function(e,t,r,n){return c[e]},localize:{ordinalNumber:function(e,t){var r=Number(e),n=r%100;if(n>20||n<10)switch(n%10){case 1:return r+"st";case 2:return r+"nd";case 3:return r+"rd"}return r+"th"},era:m({values:{narrow:["B","A"],abbreviated:["BC","AD"],wide:["Before Christ","Anno Domini"]},defaultWidth:"wide"}),quarter:m({values:{narrow:["1","2","3","4"],abbreviated:["Q1","Q2","Q3","Q4"],wide:["1st quarter","2nd quarter","3rd quarter","4th quarter"]},defaultWidth:"wide",argumentCallback:function(e){return e-1}}),month:m({values:{narrow:["J","F","M","A","M","J","J","A","S","O","N","D"],abbreviated:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],wide:["January","February","March","April","May","June","July","August","September","October","November","December"]},defaultWidth:"wide"}),day:m({values:{narrow:["S","M","T","W","T","F","S"],short:["Su","Mo","Tu","We","Th","Fr","Sa"],abbreviated:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],wide:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"]},defaultWidth:"wide"}),dayPeriod:m({values:{narrow:{am:"a",pm:"p",midnight:"mi",noon:"n",morning:"morning",afternoon:"afternoon",evening:"evening",night:"night"},abbreviated:{am:"AM",pm:"PM",midnight:"midnight",noon:"noon",morning:"morning",afternoon:"afternoon",evening:"evening",night:"night"},wide:{am:"a.m.",pm:"p.m.",midnight:"midnight",noon:"noon",morning:"morning",afternoon:"afternoon",evening:"evening",night:"night"}},defaultWidth:"wide",formattingValues:{narrow:{am:"a",pm:"p",midnight:"mi",noon:"n",morning:"in the morning",afternoon:"in the afternoon",evening:"in the evening",night:"at night"},abbreviated:{am:"AM",pm:"PM",midnight:"midnight",noon:"noon",morning:"in the morning",afternoon:"in the afternoon",evening:"in the evening",night:"at night"},wide:{am:"a.m.",pm:"p.m.",midnight:"midnight",noon:"noon",morning:"in the morning",afternoon:"in the afternoon",evening:"in the evening",night:"at night"}},defaultFormattingWidth:"wide"})},match:{ordinalNumber:(n={matchPattern:/^(\d+)(th|st|nd|rd)?/i,parsePattern:/\d+/i,valueCallback:function(e){return parseInt(e,10)}},function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},r=e.match(n.matchPattern);if(!r)return null;var o=r[0],a=e.match(n.parsePattern);if(!a)return null;var i=n.valueCallback?n.valueCallback(a[0]):a[0];return{value:i=t.valueCallback?t.valueCallback(i):i,rest:e.slice(o.length)}}),era:g({matchPatterns:{narrow:/^(b|a)/i,abbreviated:/^(b\.?\s?c\.?|b\.?\s?c\.?\s?e\.?|a\.?\s?d\.?|c\.?\s?e\.?)/i,wide:/^(before christ|before common era|anno domini|common era)/i},defaultMatchWidth:"wide",parsePatterns:{any:[/^b/i,/^(a|c)/i]},defaultParseWidth:"any"}),quarter:g({matchPatterns:{narrow:/^[1234]/i,abbreviated:/^q[1234]/i,wide:/^[1234](th|st|nd|rd)? quarter/i},defaultMatchWidth:"wide",parsePatterns:{any:[/1/i,/2/i,/3/i,/4/i]},defaultParseWidth:"any",valueCallback:function(e){return e+1}}),month:g({matchPatterns:{narrow:/^[jfmasond]/i,abbreviated:/^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,wide:/^(january|february|march|april|may|june|july|august|september|october|november|december)/i},defaultMatchWidth:"wide",parsePatterns:{narrow:[/^j/i,/^f/i,/^m/i,/^a/i,/^m/i,/^j/i,/^j/i,/^a/i,/^s/i,/^o/i,/^n/i,/^d/i],any:[/^ja/i,/^f/i,/^mar/i,/^ap/i,/^may/i,/^jun/i,/^jul/i,/^au/i,/^s/i,/^o/i,/^n/i,/^d/i]},defaultParseWidth:"any"}),day:g({matchPatterns:{narrow:/^[smtwf]/i,short:/^(su|mo|tu|we|th|fr|sa)/i,abbreviated:/^(sun|mon|tue|wed|thu|fri|sat)/i,wide:/^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i},defaultMatchWidth:"wide",parsePatterns:{narrow:[/^s/i,/^m/i,/^t/i,/^w/i,/^t/i,/^f/i,/^s/i],any:[/^su/i,/^m/i,/^tu/i,/^w/i,/^th/i,/^f/i,/^sa/i]},defaultParseWidth:"any"}),dayPeriod:g({matchPatterns:{narrow:/^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,any:/^([ap]\.?\s?m\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i},defaultMatchWidth:"any",parsePatterns:{any:{am:/^a/i,pm:/^p/i,midnight:/^mi/i,noon:/^no/i,morning:/morning/i,afternoon:/afternoon/i,evening:/evening/i,night:/night/i}},defaultParseWidth:"any"})},options:{weekStartsOn:0,firstWeekContainsDate:1}};function p(e,t){if(null==e)throw TypeError("assign requires that input parameter not be null or undefined");for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r]);return e}function y(e){var t=new Date(Date.UTC(e.getFullYear(),e.getMonth(),e.getDate(),e.getHours(),e.getMinutes(),e.getSeconds(),e.getMilliseconds()));return t.setUTCFullYear(e.getFullYear()),e.getTime()-t.getTime()}function b(e,t){return i(1,arguments),function(e,t,r){i(2,arguments);var n,a,f,h,d,c=null!==(n=null!==(a=null==r?void 0:r.locale)&&void 0!==a?a:o.locale)&&void 0!==n?n:v;if(!c.formatDistance)throw RangeError("locale must contain formatDistance property");var m=s(e,t);if(isNaN(m))throw RangeError("Invalid time value");var g=p(p({},r),{addSuffix:!!(null==r?void 0:r.addSuffix),comparison:m});m>0?(f=u(t),h=u(e)):(f=u(e),h=u(t));var b=function(e,t,r){i(2,arguments);var n,o=function(e,t){return i(2,arguments),u(e).getTime()-u(t).getTime()}(e,t)/1e3;return((n=null==r?void 0:r.roundingMethod)?l[n]:l.trunc)(o)}(h,f),M=Math.round((b-(y(h)-y(f))/1e3)/60);if(M<2){if(null!=r&&r.includeSeconds){if(b<5)return c.formatDistance("lessThanXSeconds",5,g);if(b<10)return c.formatDistance("lessThanXSeconds",10,g);if(b<20)return c.formatDistance("lessThanXSeconds",20,g);if(b<40)return c.formatDistance("halfAMinute",0,g);else if(b<60)return c.formatDistance("lessThanXMinutes",1,g);else return c.formatDistance("xMinutes",1,g)}return 0===M?c.formatDistance("lessThanXMinutes",1,g):c.formatDistance("xMinutes",M,g)}if(M<45)return c.formatDistance("xMinutes",M,g);if(M<90)return c.formatDistance("aboutXHours",1,g);if(M<1440){var w=Math.round(M/60);return c.formatDistance("aboutXHours",w,g)}if(M<2520)return c.formatDistance("xDays",1,g);if(M<43200){var k=Math.round(M/1440);return c.formatDistance("xDays",k,g)}if(M<86400)return d=Math.round(M/43200),c.formatDistance("aboutXMonths",d,g);if((d=function(e,t){i(2,arguments);var r,n=u(e),o=u(t),a=s(n,o),l=Math.abs(function(e,t){i(2,arguments);var r=u(e),n=u(t);return 12*(r.getFullYear()-n.getFullYear())+(r.getMonth()-n.getMonth())}(n,o));if(l<1)r=0;else{1===n.getMonth()&&n.getDate()>27&&n.setDate(30),n.setMonth(n.getMonth()-a*l);var f=s(n,o)===-a;(function(e){i(1,arguments);var t=u(e);return(function(e){i(1,arguments);var t=u(e);return t.setHours(23,59,59,999),t})(t).getTime()===(function(e){i(1,arguments);var t=u(e),r=t.getMonth();return t.setFullYear(t.getFullYear(),r+1,0),t.setHours(23,59,59,999),t})(t).getTime()})(u(e))&&1===l&&1===s(e,o)&&(f=!1),r=a*(l-Number(f))}return 0===r?0:r}(h,f))<12){var P=Math.round(M/43200);return c.formatDistance("xMonths",P,g)}var T=d%12,E=Math.floor(d/12);return T<3?c.formatDistance("aboutXYears",E,g):T<9?c.formatDistance("overXYears",E,g):c.formatDistance("almostXYears",E+1,g)}(e,Date.now(),t)}}}]);